Program (args) {         
	stencilEnv = new TaskEnvironment(name: "Five Points Stencil")
       
	bind_input(stencilEnv, "plate", args.input_file)
        bind_output(stencilEnv, "plate", args.output_file)

	iterations = args.iterations
	p = args.p
	k = args.k
	l = args.l
	m = args.m
	n = args.n
        execute("Five Points Stencil"; stencilEnv; Initialize: iterations; Partition: p, k, l, m, n)
}

Task "Five Points Stencil":
	Define:
		plate: 2D Array of Real single-precision
		t: Epoch
		total_iterations: Integer
	Environment:
		plate: link
	Initialize (iterations):
		total_iterations = iterations
	Compute:
		"Refine Global Estimate" (Space A) {
			"Refine Local Estimate" (Space B) {
				"Calculate Estimate" (Space B) {
					localRows = plate.local.dimension1.range
					localCols = plate.local.dimension2.range
					do { 
						plate[i][j] at (t)				\
						= 1/4 * (plate[i - 1][j] 			\
						+ plate[i + 1][j] 				\
						+ plate[i][j - 1]				\
						+ plate[i][j + 1]) at (t - 1)
					} for i, j in plate 					\
					and (i > localRows.min and i < localRows.max) 		\
					and (j > localCols.min and j < localCols.max)
				}
				Repeat: from "Calculate Estimate" while t.current % partition.n != 0
			} 
			Repeat: from "Refine Local Estimate" while t.current % partition.m != 0
		}
		Repeat: from "Refine Global Estimate" while t.current < total_iterations
	Partition (p, k, l, m, n):
		Space A <1D> { 
			plate: block_size(p) padding(m)
		}
		Space B <2D> divides Space A partitions { 
			plate: block_size(k, l) padding(n, n)
		}

