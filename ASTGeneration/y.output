Terminals unused in grammar

   T_Index
   To


Grammar

    0 $accept: program $end

    1 program: components

    2 components: component
    3           | components component

    4 component: tuple
    5          | task
    6          | function
    7          | coordinator

    8 tuple: Tuple Type_Name ':' element_defs

    9 element_defs: element_def
   10             | element_defs element_def

   11 element_def: names ':' static_type

   12 names: Variable_Name
   13      | names ',' Variable_Name

   14 static_type: scalar_type
   15            | static_array

   16 scalar_type: T_Integer
   17            | T_Real Single
   18            | T_Real Double
   19            | T_Character
   20            | T_Boolean
   21            | T_Epoch
   22            | T_Range
   23            | Type_Name

   24 static_array: T_Array static_dims Of scalar_type

   25 static_dims: static_dims '[' Integer ']'
   26            | '[' Integer ']'

   27 task: Task String ':' define environment initialize compute partition

   28 define: S_Define ':' definitions

   29 definitions: definition
   30            | definitions definition

   31 definition: names ':' type

   32 type: static_type
   33     | dynamic_type

   34 dynamic_type: list
   35             | dynamic_array

   36 list: T_List Of static_type

   37 dynamic_array: Dimensionality T_Array Of scalar_type format

   38 format: /* empty */
   39       | Format Type_Name

   40 environment: S_Environment ':' linkages

   41 linkages: linkage
   42         | linkages linkage

   43 linkage: names ':' mode

   44 mode: Link
   45     | Create
   46     | Link_or_Create

   47 initialize: /* empty */
   48           | S_Initialize arguments ':' code

   49 arguments: /* empty */
   50          | '(' names ')'

   51 compute: S_Compute ':' meta_stages

   52 meta_stages: stage_sequence
   53            | meta_stage
   54            | meta_stage meta_stages

   55 meta_stage: stage_sequence repeat_control

   56 stage_sequence: compute_stage
   57               | stage_sequence compute_stage

   58 compute_stage: stage_header '{' meta_stages '}'
   59              | stage_header '{' code '}'

   60 stage_header: String '(' Space Space_ID ')' activation_command

   61 activation_command: /* empty */
   62                   | Activate If Variable_Name In expr

   63 repeat_control: Repeat ':' From String repeat_loop

   64 repeat_loop: For Variable_Name In expr step_expr
   65            | While expr
   66            | Foreach Space Space_ID C_Sub_Partition

   67 partition: S_Partition arguments ':' partition_specs

   68 partition_specs: partition_spec
   69                | partition_specs partition_spec

   70 partition_spec: Space Space_ID '<' Dimensionality '>' dynamic divides '{' main_dist sub_dist '}'
   71               | Space Space_ID '<' Unpartitioned '>' '{' names '}'

   72 dynamic: /* empty */
   73        | '<' Dynamic '>'

   74 divides: /* empty */
   75        | Divides Space Space_ID Partitions
   76        | Divides Space Space_ID Sub_Partitions

   77 main_dist: data_spec
   78          | main_dist data_spec

   79 data_spec: var_list ':' instr_list relativity

   80 var_list: var
   81         | var_list ',' var

   82 var: Variable_Name
   83    | Variable_Name '<' dimensions '>'

   84 dimensions: V_Dimension
   85           | dimensions ',' V_Dimension

   86 instr_list: instr
   87           | instr_list ',' instr

   88 instr: Replicated
   89      | Variable_Name '(' partition_args ')'
   90      | Variable_Name '(' partition_args ')' Padding '(' partition_args ')'

   91 partition_args: /* empty */
   92               | partition_arg
   93               | partition_args ',' partition_arg

   94 partition_arg: Variable_Name
   95              | Integer

   96 relativity: /* empty */
   97           | ';' Relative_To Space Space_ID

   98 sub_dist: /* empty */
   99         | P_Sub_Partition '<' Dimensionality '>' '<' nature '>' '{' data_sub_dist '}'

  100 nature: Ordered
  101       | Unordered

  102 data_sub_dist: data_sub_spec
  103              | data_sub_dist data_sub_spec

  104 data_sub_spec: var_list ':' ordered_instr_list

  105 ordered_instr_list: ordered_instr
  106                   | ordered_instr_list ',' ordered_instr

  107 ordered_instr: instr order

  108 order: /* empty */
  109      | Ascends
  110      | Descends

  111 $@1: /* empty */

  112 code: $@1 stmt_block

  113 stmt_block: stmt
  114           | stmt new_lines
  115           | stmt new_lines stmt_block

  116 new_lines: New_Line
  117          | New_Line new_lines

  118 stmt: parallel_loop
  119     | sequencial_loop
  120     | if_else_block
  121     | expr

  122 sequencial_loop: Do In Sequence '{' stmt_block '}' For id In expr step_expr

  123 parallel_loop: Do '{' stmt_block '}' For index_ranges
  124              | Do '{' stmt_block '}' While expr

  125 index_ranges: index_range
  126             | index_ranges ';' index_range

  127 index_range: names In Variable_Name restrictions

  128 restrictions: /* empty */
  129             | O_AND expr

  130 if_else_block: If '(' expr ')' '{' stmt_block '}' else_block

  131 else_block: /* empty */
  132           | else
  133           | else_if else_block

  134 else: Else '{' stmt_block '}'

  135 else_if: Else If '(' expr ')' '{' stmt_block '}'

  136 step_expr: /* empty */
  137          | Step expr

  138 expr: expr '+' expr
  139     | expr '-' expr
  140     | expr '*' expr
  141     | expr '/' expr
  142     | expr '%' expr
  143     | expr O_LSH expr
  144     | expr O_RSH expr
  145     | expr O_POWER expr
  146     | expr '<' expr
  147     | expr '>' expr
  148     | expr O_OR expr
  149     | expr O_AND expr
  150     | expr O_EQ expr
  151     | expr O_NE expr
  152     | '!' expr
  153     | expr O_GTE expr
  154     | expr O_LTE expr
  155     | expr '=' expr
  156     | expr R_ADD expr
  157     | expr R_MULT expr
  158     | expr R_MAX expr
  159     | expr R_MIN expr
  160     | expr R_AVG expr
  161     | expr R_MAX_ENTRY expr
  162     | expr R_MIN_ENTRY expr
  163     | constant
  164     | field
  165     | function_call
  166     | task_invocation
  167     | create_obj
  168     | expr At '(' epoch ')'
  169     | '(' expr ')'

  170 constant: Integer
  171         | Real
  172         | Boolean
  173         | Character

  174 field: id
  175      | field '.' id
  176      | field '[' array_index ']'

  177 array_index: expr
  178            | expr O_SB_RANGE expr
  179            | O_SB_RANGE

  180 function_call: Variable_Name '(' args ')'

  181 args: /* empty */
  182     | String
  183     | expr
  184     | args ',' expr

  185 epoch: Variable_Name
  186      | Variable_Name '-' Integer

  187 id: Variable_Name
  188   | Dimension_No
  189   | Range
  190   | Local
  191   | Index

  192 coordinator: Program '(' Variable_Name ')' ':' meta_code

  193 $@2: /* empty */

  194 meta_code: $@2 stmt_block

  195 create_obj: New dynamic_type
  196           | New static_type '(' args ')'

  197 task_invocation: Execute '(' String ';' id optional_secs ')'

  198 optional_secs: /* empty */
  199              | ';' optional_sec
  200              | ';' optional_sec ';' optional_sec

  201 optional_sec: section ':' args

  202 section: S_Initialize
  203        | S_Partition

  204 function: Function Variable_Name ':' in_out function_body

  205 in_out: output
  206       | input output

  207 input: S_Arguments ':' definitions

  208 output: S_Results ':' definitions

  209 function_body: S_Compute ':' code


Terminals, with rules where they appear

$end (0) 0
'!' (33) 152
'%' (37) 142
'(' (40) 50 60 89 90 130 135 168 169 180 192 196 197
')' (41) 50 60 89 90 130 135 168 169 180 192 196 197
'*' (42) 140
'+' (43) 138
',' (44) 13 81 85 87 93 106 184
'-' (45) 139 186
'.' (46) 175
'/' (47) 141
':' (58) 8 11 27 28 31 40 43 48 51 63 67 79 104 192 201 204 207 208
    209
';' (59) 97 126 197 199 200
'<' (60) 70 71 73 83 99 146
'=' (61) 155
'>' (62) 70 71 73 83 99 147
'[' (91) 25 26 176
']' (93) 25 26 176
'{' (123) 58 59 70 71 99 122 123 124 130 134 135
'}' (125) 58 59 70 71 99 122 123 124 130 134 135
error (256)
Program (258) 192
Tuple (259) 8
Task (260) 27
Function (261) 204
New (262) 195 196
Execute (263) 197
S_Define (264) 28
S_Environment (265) 40
S_Initialize (266) 48 202
S_Compute (267) 51 209
S_Partition (268) 67 203
S_Arguments (269) 207
S_Results (270) 208
T_Integer (271) 16
T_Character (272) 19
T_Real (273) 17 18
T_Boolean (274) 20
T_Epoch (275) 21
T_Index (276)
T_Range (277) 22
T_Array (278) 24 37
T_List (279) 36
Single (280) 17
Double (281) 18
Format (282) 39
Space (283) 60 66 70 71 75 76 97
Activate (284) 62
For (285) 64 122 123
If (286) 62 130 135
Repeat (287) 63
Else (288) 134 135
From (289) 63
In (290) 62 64 122 127
Step (291) 137
Foreach (292) 66
Range (293) 189
Local (294) 190
Index (295) 191
C_Sub_Partition (296) 66
While (297) 65 124
Do (298) 122 123 124
Sequence (299) 122
To (300)
Of (301) 24 36 37
Link (302) 44
Create (303) 45
Link_or_Create (304) 46
Dynamic (305) 73
P_Sub_Partition (306) 99
Ordered (307) 100
Unordered (308) 101
Replicated (309) 88
Padding (310) 90
Relative_To (311) 97
Divides (312) 75 76
Sub_Partitions (313) 76
Partitions (314) 75
Unpartitioned (315) 71
Ascends (316) 109
Descends (317) 110
New_Line (318) 116 117
Integer (319) 25 26 95 170 186
Dimensionality (320) 37 70 99
Dimension_No (321) 188
V_Dimension (322) 84 85
Character (323) 173
Space_ID (324) 60 66 70 71 75 76 97
Real (325) 171
Boolean (326) 172
Type_Name (327) 8 23 39
Variable_Name (328) 12 13 62 64 82 83 89 90 94 127 180 185 186 187
    192 204
String (329) 27 60 63 182 197
R_AVG (330) 160
R_MIN_ENTRY (331) 162
R_MAX_ENTRY (332) 161
R_MIN (333) 159
R_MAX (334) 158
R_MULT (335) 157
R_ADD (336) 156
O_OR (337) 148
O_AND (338) 129 149
O_NE (339) 151
O_EQ (340) 150
O_GTE (341) 153
O_LTE (342) 154
O_SB_RANGE (343) 178 179
O_RSH (344) 144
O_LSH (345) 143
O_POWER (346) 145
At (347) 168
Field (348)


Nonterminals, with rules where they appear

$accept (113)
    on left: 0
program (114)
    on left: 1, on right: 0
components (115)
    on left: 2 3, on right: 1 3
component (116)
    on left: 4 5 6 7, on right: 2 3
tuple (117)
    on left: 8, on right: 4
element_defs (118)
    on left: 9 10, on right: 8 10
element_def (119)
    on left: 11, on right: 9 10
names (120)
    on left: 12 13, on right: 11 13 31 43 50 71 127
static_type (121)
    on left: 14 15, on right: 11 32 36 196
scalar_type (122)
    on left: 16 17 18 19 20 21 22 23, on right: 14 24 37
static_array (123)
    on left: 24, on right: 15
static_dims (124)
    on left: 25 26, on right: 24 25
task (125)
    on left: 27, on right: 5
define (126)
    on left: 28, on right: 27
definitions (127)
    on left: 29 30, on right: 28 30 207 208
definition (128)
    on left: 31, on right: 29 30
type (129)
    on left: 32 33, on right: 31
dynamic_type (130)
    on left: 34 35, on right: 33 195
list (131)
    on left: 36, on right: 34
dynamic_array (132)
    on left: 37, on right: 35
format (133)
    on left: 38 39, on right: 37
environment (134)
    on left: 40, on right: 27
linkages (135)
    on left: 41 42, on right: 40 42
linkage (136)
    on left: 43, on right: 41 42
mode (137)
    on left: 44 45 46, on right: 43
initialize (138)
    on left: 47 48, on right: 27
arguments (139)
    on left: 49 50, on right: 48 67
compute (140)
    on left: 51, on right: 27
meta_stages (141)
    on left: 52 53 54, on right: 51 54 58
meta_stage (142)
    on left: 55, on right: 53 54
stage_sequence (143)
    on left: 56 57, on right: 52 55 57
compute_stage (144)
    on left: 58 59, on right: 56 57
stage_header (145)
    on left: 60, on right: 58 59
activation_command (146)
    on left: 61 62, on right: 60
repeat_control (147)
    on left: 63, on right: 55
repeat_loop (148)
    on left: 64 65 66, on right: 63
partition (149)
    on left: 67, on right: 27
partition_specs (150)
    on left: 68 69, on right: 67 69
partition_spec (151)
    on left: 70 71, on right: 68 69
dynamic (152)
    on left: 72 73, on right: 70
divides (153)
    on left: 74 75 76, on right: 70
main_dist (154)
    on left: 77 78, on right: 70 78
data_spec (155)
    on left: 79, on right: 77 78
var_list (156)
    on left: 80 81, on right: 79 81 104
var (157)
    on left: 82 83, on right: 80 81
dimensions (158)
    on left: 84 85, on right: 83 85
instr_list (159)
    on left: 86 87, on right: 79 87
instr (160)
    on left: 88 89 90, on right: 86 87 107
partition_args (161)
    on left: 91 92 93, on right: 89 90 93
partition_arg (162)
    on left: 94 95, on right: 92 93
relativity (163)
    on left: 96 97, on right: 79
sub_dist (164)
    on left: 98 99, on right: 70
nature (165)
    on left: 100 101, on right: 99
data_sub_dist (166)
    on left: 102 103, on right: 99 103
data_sub_spec (167)
    on left: 104, on right: 102 103
ordered_instr_list (168)
    on left: 105 106, on right: 104 106
ordered_instr (169)
    on left: 107, on right: 105 106
order (170)
    on left: 108 109 110, on right: 107
code (171)
    on left: 112, on right: 48 59 209
$@1 (172)
    on left: 111, on right: 112
stmt_block (173)
    on left: 113 114 115, on right: 112 115 122 123 124 130 134 135
    194
new_lines (174)
    on left: 116 117, on right: 114 115 117
stmt (175)
    on left: 118 119 120 121, on right: 113 114 115
sequencial_loop (176)
    on left: 122, on right: 119
parallel_loop (177)
    on left: 123 124, on right: 118
index_ranges (178)
    on left: 125 126, on right: 123 126
index_range (179)
    on left: 127, on right: 125 126
restrictions (180)
    on left: 128 129, on right: 127
if_else_block (181)
    on left: 130, on right: 120
else_block (182)
    on left: 131 132 133, on right: 130 133
else (183)
    on left: 134, on right: 132
else_if (184)
    on left: 135, on right: 133
step_expr (185)
    on left: 136 137, on right: 64 122
expr (186)
    on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151
    152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167
    168 169, on right: 62 64 65 121 122 124 129 130 135 137 138 139
    140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
    156 157 158 159 160 161 162 168 169 177 178 183 184
constant (187)
    on left: 170 171 172 173, on right: 163
field (188)
    on left: 174 175 176, on right: 164 175 176
array_index (189)
    on left: 177 178 179, on right: 176
function_call (190)
    on left: 180, on right: 165
args (191)
    on left: 181 182 183 184, on right: 180 184 196 201
epoch (192)
    on left: 185 186, on right: 168
id (193)
    on left: 187 188 189 190 191, on right: 122 174 175 197
coordinator (194)
    on left: 192, on right: 7
meta_code (195)
    on left: 194, on right: 192
$@2 (196)
    on left: 193, on right: 194
create_obj (197)
    on left: 195 196, on right: 167
task_invocation (198)
    on left: 197, on right: 166
optional_secs (199)
    on left: 198 199 200, on right: 197
optional_sec (200)
    on left: 201, on right: 199 200
section (201)
    on left: 202 203, on right: 201
function (202)
    on left: 204, on right: 6
in_out (203)
    on left: 205 206, on right: 204
input (204)
    on left: 207, on right: 206
output (205)
    on left: 208, on right: 205 206
function_body (206)
    on left: 209, on right: 204


state 0

    0 $accept: . program $end

    Program   shift, and go to state 1
    Tuple     shift, and go to state 2
    Task      shift, and go to state 3
    Function  shift, and go to state 4

    program      go to state 5
    components   go to state 6
    component    go to state 7
    tuple        go to state 8
    task         go to state 9
    coordinator  go to state 10
    function     go to state 11


state 1

  192 coordinator: Program . '(' Variable_Name ')' ':' meta_code

    '('  shift, and go to state 12


state 2

    8 tuple: Tuple . Type_Name ':' element_defs

    Type_Name  shift, and go to state 13


state 3

   27 task: Task . String ':' define environment initialize compute partition

    String  shift, and go to state 14


state 4

  204 function: Function . Variable_Name ':' in_out function_body

    Variable_Name  shift, and go to state 15


state 5

    0 $accept: program . $end

    $end  shift, and go to state 16


state 6

    1 program: components .
    3 components: components . component

    Program   shift, and go to state 1
    Tuple     shift, and go to state 2
    Task      shift, and go to state 3
    Function  shift, and go to state 4

    $default  reduce using rule 1 (program)

    component    go to state 17
    tuple        go to state 8
    task         go to state 9
    coordinator  go to state 10
    function     go to state 11


state 7

    2 components: component .

    $default  reduce using rule 2 (components)


state 8

    4 component: tuple .

    $default  reduce using rule 4 (component)


state 9

    5 component: task .

    $default  reduce using rule 5 (component)


state 10

    7 component: coordinator .

    $default  reduce using rule 7 (component)


state 11

    6 component: function .

    $default  reduce using rule 6 (component)


state 12

  192 coordinator: Program '(' . Variable_Name ')' ':' meta_code

    Variable_Name  shift, and go to state 18


state 13

    8 tuple: Tuple Type_Name . ':' element_defs

    ':'  shift, and go to state 19


state 14

   27 task: Task String . ':' define environment initialize compute partition

    ':'  shift, and go to state 20


state 15

  204 function: Function Variable_Name . ':' in_out function_body

    ':'  shift, and go to state 21


state 16

    0 $accept: program $end .

    $default  accept


state 17

    3 components: components component .

    $default  reduce using rule 3 (components)


state 18

  192 coordinator: Program '(' Variable_Name . ')' ':' meta_code

    ')'  shift, and go to state 22


state 19

    8 tuple: Tuple Type_Name ':' . element_defs

    Variable_Name  shift, and go to state 23

    element_defs  go to state 24
    element_def   go to state 25
    names         go to state 26


state 20

   27 task: Task String ':' . define environment initialize compute partition

    S_Define  shift, and go to state 27

    define  go to state 28


state 21

  204 function: Function Variable_Name ':' . in_out function_body

    S_Arguments  shift, and go to state 29
    S_Results    shift, and go to state 30

    in_out  go to state 31
    input   go to state 32
    output  go to state 33


state 22

  192 coordinator: Program '(' Variable_Name ')' . ':' meta_code

    ':'  shift, and go to state 34


state 23

   12 names: Variable_Name .

    $default  reduce using rule 12 (names)


state 24

    8 tuple: Tuple Type_Name ':' element_defs .
   10 element_defs: element_defs . element_def

    Variable_Name  shift, and go to state 23

    $default  reduce using rule 8 (tuple)

    element_def  go to state 35
    names        go to state 26


state 25

    9 element_defs: element_def .

    $default  reduce using rule 9 (element_defs)


state 26

   11 element_def: names . ':' static_type
   13 names: names . ',' Variable_Name

    ','  shift, and go to state 36
    ':'  shift, and go to state 37


state 27

   28 define: S_Define . ':' definitions

    ':'  shift, and go to state 38


state 28

   27 task: Task String ':' define . environment initialize compute partition

    S_Environment  shift, and go to state 39

    environment  go to state 40


state 29

  207 input: S_Arguments . ':' definitions

    ':'  shift, and go to state 41


state 30

  208 output: S_Results . ':' definitions

    ':'  shift, and go to state 42


state 31

  204 function: Function Variable_Name ':' in_out . function_body

    S_Compute  shift, and go to state 43

    function_body  go to state 44


state 32

  206 in_out: input . output

    S_Results  shift, and go to state 30

    output  go to state 45


state 33

  205 in_out: output .

    $default  reduce using rule 205 (in_out)


state 34

  192 coordinator: Program '(' Variable_Name ')' ':' . meta_code

    $default  reduce using rule 193 ($@2)

    meta_code  go to state 46
    $@2        go to state 47


state 35

   10 element_defs: element_defs element_def .

    $default  reduce using rule 10 (element_defs)


state 36

   13 names: names ',' . Variable_Name

    Variable_Name  shift, and go to state 48


state 37

   11 element_def: names ':' . static_type

    T_Integer    shift, and go to state 49
    T_Character  shift, and go to state 50
    T_Real       shift, and go to state 51
    T_Boolean    shift, and go to state 52
    T_Epoch      shift, and go to state 53
    T_Range      shift, and go to state 54
    T_Array      shift, and go to state 55
    Type_Name    shift, and go to state 56

    static_type   go to state 57
    scalar_type   go to state 58
    static_array  go to state 59


state 38

   28 define: S_Define ':' . definitions

    Variable_Name  shift, and go to state 23

    names        go to state 60
    definitions  go to state 61
    definition   go to state 62


state 39

   40 environment: S_Environment . ':' linkages

    ':'  shift, and go to state 63


state 40

   27 task: Task String ':' define environment . initialize compute partition

    S_Initialize  shift, and go to state 64

    $default  reduce using rule 47 (initialize)

    initialize  go to state 65


state 41

  207 input: S_Arguments ':' . definitions

    Variable_Name  shift, and go to state 23

    names        go to state 60
    definitions  go to state 66
    definition   go to state 62


state 42

  208 output: S_Results ':' . definitions

    Variable_Name  shift, and go to state 23

    names        go to state 60
    definitions  go to state 67
    definition   go to state 62


state 43

  209 function_body: S_Compute . ':' code

    ':'  shift, and go to state 68


state 44

  204 function: Function Variable_Name ':' in_out function_body .

    $default  reduce using rule 204 (function)


state 45

  206 in_out: input output .

    $default  reduce using rule 206 (in_out)


state 46

  192 coordinator: Program '(' Variable_Name ')' ':' meta_code .

    $default  reduce using rule 192 (coordinator)


state 47

  194 meta_code: $@2 . stmt_block

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    stmt_block       go to state 84
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 48

   13 names: names ',' Variable_Name .

    $default  reduce using rule 13 (names)


state 49

   16 scalar_type: T_Integer .

    $default  reduce using rule 16 (scalar_type)


state 50

   19 scalar_type: T_Character .

    $default  reduce using rule 19 (scalar_type)


state 51

   17 scalar_type: T_Real . Single
   18            | T_Real . Double

    Single  shift, and go to state 96
    Double  shift, and go to state 97


state 52

   20 scalar_type: T_Boolean .

    $default  reduce using rule 20 (scalar_type)


state 53

   21 scalar_type: T_Epoch .

    $default  reduce using rule 21 (scalar_type)


state 54

   22 scalar_type: T_Range .

    $default  reduce using rule 22 (scalar_type)


state 55

   24 static_array: T_Array . static_dims Of scalar_type

    '['  shift, and go to state 98

    static_dims  go to state 99


state 56

   23 scalar_type: Type_Name .

    $default  reduce using rule 23 (scalar_type)


state 57

   11 element_def: names ':' static_type .

    $default  reduce using rule 11 (element_def)


state 58

   14 static_type: scalar_type .

    $default  reduce using rule 14 (static_type)


state 59

   15 static_type: static_array .

    $default  reduce using rule 15 (static_type)


state 60

   13 names: names . ',' Variable_Name
   31 definition: names . ':' type

    ','  shift, and go to state 36
    ':'  shift, and go to state 100


state 61

   28 define: S_Define ':' definitions .
   30 definitions: definitions . definition

    Variable_Name  shift, and go to state 23

    $default  reduce using rule 28 (define)

    names       go to state 60
    definition  go to state 101


state 62

   29 definitions: definition .

    $default  reduce using rule 29 (definitions)


state 63

   40 environment: S_Environment ':' . linkages

    Variable_Name  shift, and go to state 23

    names     go to state 102
    linkages  go to state 103
    linkage   go to state 104


state 64

   48 initialize: S_Initialize . arguments ':' code

    '('  shift, and go to state 105

    $default  reduce using rule 49 (arguments)

    arguments  go to state 106


state 65

   27 task: Task String ':' define environment initialize . compute partition

    S_Compute  shift, and go to state 107

    compute  go to state 108


state 66

   30 definitions: definitions . definition
  207 input: S_Arguments ':' definitions .

    Variable_Name  shift, and go to state 23

    $default  reduce using rule 207 (input)

    names       go to state 60
    definition  go to state 101


state 67

   30 definitions: definitions . definition
  208 output: S_Results ':' definitions .

    Variable_Name  shift, and go to state 23

    $default  reduce using rule 208 (output)

    names       go to state 60
    definition  go to state 101


state 68

  209 function_body: S_Compute ':' . code

    $default  reduce using rule 111 ($@1)

    code  go to state 109
    $@1   go to state 110


state 69

  195 create_obj: New . dynamic_type
  196           | New . static_type '(' args ')'

    T_Integer       shift, and go to state 49
    T_Character     shift, and go to state 50
    T_Real          shift, and go to state 51
    T_Boolean       shift, and go to state 52
    T_Epoch         shift, and go to state 53
    T_Range         shift, and go to state 54
    T_Array         shift, and go to state 55
    T_List          shift, and go to state 111
    Dimensionality  shift, and go to state 112
    Type_Name       shift, and go to state 56

    static_type    go to state 113
    scalar_type    go to state 58
    static_array   go to state 59
    dynamic_type   go to state 114
    list           go to state 115
    dynamic_array  go to state 116


state 70

  197 task_invocation: Execute . '(' String ';' id optional_secs ')'

    '('  shift, and go to state 117


state 71

  130 if_else_block: If . '(' expr ')' '{' stmt_block '}' else_block

    '('  shift, and go to state 118


state 72

  189 id: Range .

    $default  reduce using rule 189 (id)


state 73

  190 id: Local .

    $default  reduce using rule 190 (id)


state 74

  191 id: Index .

    $default  reduce using rule 191 (id)


state 75

  122 sequencial_loop: Do . In Sequence '{' stmt_block '}' For id In expr step_expr
  123 parallel_loop: Do . '{' stmt_block '}' For index_ranges
  124              | Do . '{' stmt_block '}' While expr

    In   shift, and go to state 119
    '{'  shift, and go to state 120


state 76

  170 constant: Integer .

    $default  reduce using rule 170 (constant)


state 77

  188 id: Dimension_No .

    $default  reduce using rule 188 (id)


state 78

  173 constant: Character .

    $default  reduce using rule 173 (constant)


state 79

  171 constant: Real .

    $default  reduce using rule 171 (constant)


state 80

  172 constant: Boolean .

    $default  reduce using rule 172 (constant)


state 81

  180 function_call: Variable_Name . '(' args ')'
  187 id: Variable_Name .

    '('  shift, and go to state 121

    $default  reduce using rule 187 (id)


state 82

  152 expr: '!' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 122
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 83

  169 expr: '(' . expr ')'

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 123
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 84

  194 meta_code: $@2 stmt_block .

    $default  reduce using rule 194 (meta_code)


state 85

  113 stmt_block: stmt .
  114           | stmt . new_lines
  115           | stmt . new_lines stmt_block

    New_Line  shift, and go to state 124

    $default  reduce using rule 113 (stmt_block)

    new_lines  go to state 125


state 86

  119 stmt: sequencial_loop .

    $default  reduce using rule 119 (stmt)


state 87

  118 stmt: parallel_loop .

    $default  reduce using rule 118 (stmt)


state 88

  120 stmt: if_else_block .

    $default  reduce using rule 120 (stmt)


state 89

  121 stmt: expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 121 (stmt)


state 90

  163 expr: constant .

    $default  reduce using rule 163 (expr)


state 91

  164 expr: field .
  175 field: field . '.' id
  176      | field . '[' array_index ']'

    '.'  shift, and go to state 151
    '['  shift, and go to state 152

    $default  reduce using rule 164 (expr)


state 92

  165 expr: function_call .

    $default  reduce using rule 165 (expr)


state 93

  174 field: id .

    $default  reduce using rule 174 (field)


state 94

  167 expr: create_obj .

    $default  reduce using rule 167 (expr)


state 95

  166 expr: task_invocation .

    $default  reduce using rule 166 (expr)


state 96

   17 scalar_type: T_Real Single .

    $default  reduce using rule 17 (scalar_type)


state 97

   18 scalar_type: T_Real Double .

    $default  reduce using rule 18 (scalar_type)


state 98

   26 static_dims: '[' . Integer ']'

    Integer  shift, and go to state 153


state 99

   24 static_array: T_Array static_dims . Of scalar_type
   25 static_dims: static_dims . '[' Integer ']'

    Of   shift, and go to state 154
    '['  shift, and go to state 155


state 100

   31 definition: names ':' . type

    T_Integer       shift, and go to state 49
    T_Character     shift, and go to state 50
    T_Real          shift, and go to state 51
    T_Boolean       shift, and go to state 52
    T_Epoch         shift, and go to state 53
    T_Range         shift, and go to state 54
    T_Array         shift, and go to state 55
    T_List          shift, and go to state 111
    Dimensionality  shift, and go to state 112
    Type_Name       shift, and go to state 56

    static_type    go to state 156
    scalar_type    go to state 58
    static_array   go to state 59
    type           go to state 157
    dynamic_type   go to state 158
    list           go to state 115
    dynamic_array  go to state 116


state 101

   30 definitions: definitions definition .

    $default  reduce using rule 30 (definitions)


state 102

   13 names: names . ',' Variable_Name
   43 linkage: names . ':' mode

    ','  shift, and go to state 36
    ':'  shift, and go to state 159


state 103

   40 environment: S_Environment ':' linkages .
   42 linkages: linkages . linkage

    Variable_Name  shift, and go to state 23

    $default  reduce using rule 40 (environment)

    names    go to state 102
    linkage  go to state 160


state 104

   41 linkages: linkage .

    $default  reduce using rule 41 (linkages)


state 105

   50 arguments: '(' . names ')'

    Variable_Name  shift, and go to state 23

    names  go to state 161


state 106

   48 initialize: S_Initialize arguments . ':' code

    ':'  shift, and go to state 162


state 107

   51 compute: S_Compute . ':' meta_stages

    ':'  shift, and go to state 163


state 108

   27 task: Task String ':' define environment initialize compute . partition

    S_Partition  shift, and go to state 164

    partition  go to state 165


state 109

  209 function_body: S_Compute ':' code .

    $default  reduce using rule 209 (function_body)


state 110

  112 code: $@1 . stmt_block

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    stmt_block       go to state 166
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 111

   36 list: T_List . Of static_type

    Of  shift, and go to state 167


state 112

   37 dynamic_array: Dimensionality . T_Array Of scalar_type format

    T_Array  shift, and go to state 168


state 113

  196 create_obj: New static_type . '(' args ')'

    '('  shift, and go to state 169


state 114

  195 create_obj: New dynamic_type .

    $default  reduce using rule 195 (create_obj)


state 115

   34 dynamic_type: list .

    $default  reduce using rule 34 (dynamic_type)


state 116

   35 dynamic_type: dynamic_array .

    $default  reduce using rule 35 (dynamic_type)


state 117

  197 task_invocation: Execute '(' . String ';' id optional_secs ')'

    String  shift, and go to state 170


state 118

  130 if_else_block: If '(' . expr ')' '{' stmt_block '}' else_block

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 171
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 119

  122 sequencial_loop: Do In . Sequence '{' stmt_block '}' For id In expr step_expr

    Sequence  shift, and go to state 172


state 120

  123 parallel_loop: Do '{' . stmt_block '}' For index_ranges
  124              | Do '{' . stmt_block '}' While expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    stmt_block       go to state 173
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 121

  180 function_call: Variable_Name '(' . args ')'

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    String         shift, and go to state 174
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    $default  reduce using rule 181 (args)

    expr             go to state 175
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    args             go to state 176
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 122

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  152     | '!' expr .
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    At  shift, and go to state 150

    $default  reduce using rule 152 (expr)


state 123

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'
  169     | '(' expr . ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150
    ')'          shift, and go to state 177


state 124

  116 new_lines: New_Line .
  117          | New_Line . new_lines

    New_Line  shift, and go to state 124

    $default  reduce using rule 116 (new_lines)

    new_lines  go to state 178


state 125

  114 stmt_block: stmt new_lines .
  115           | stmt new_lines . stmt_block

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    $default  reduce using rule 114 (stmt_block)

    stmt_block       go to state 179
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 126

  155 expr: expr '=' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 180
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 127

  160 expr: expr R_AVG . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 181
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 128

  162 expr: expr R_MIN_ENTRY . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 182
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 129

  161 expr: expr R_MAX_ENTRY . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 183
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 130

  159 expr: expr R_MIN . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 184
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 131

  158 expr: expr R_MAX . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 185
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 132

  157 expr: expr R_MULT . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 186
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 133

  156 expr: expr R_ADD . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 187
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 134

  148 expr: expr O_OR . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 188
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 135

  149 expr: expr O_AND . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 189
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 136

  151 expr: expr O_NE . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 190
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 137

  150 expr: expr O_EQ . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 191
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 138

  146 expr: expr '<' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 192
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 139

  147 expr: expr '>' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 193
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 140

  153 expr: expr O_GTE . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 194
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 141

  154 expr: expr O_LTE . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 195
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 142

  144 expr: expr O_RSH . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 196
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 143

  143 expr: expr O_LSH . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 197
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 144

  138 expr: expr '+' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 198
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 145

  139 expr: expr '-' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 199
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 146

  142 expr: expr '%' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 200
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 147

  140 expr: expr '*' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 201
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 148

  141 expr: expr '/' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 202
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 149

  145 expr: expr O_POWER . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 203
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 150

  168 expr: expr At . '(' epoch ')'

    '('  shift, and go to state 204


state 151

  175 field: field '.' . id

    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Dimension_No   shift, and go to state 77
    Variable_Name  shift, and go to state 205

    id  go to state 206


state 152

  176 field: field '[' . array_index ']'

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    O_SB_RANGE     shift, and go to state 207
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 208
    constant         go to state 90
    field            go to state 91
    array_index      go to state 209
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 153

   26 static_dims: '[' Integer . ']'

    ']'  shift, and go to state 210


state 154

   24 static_array: T_Array static_dims Of . scalar_type

    T_Integer    shift, and go to state 49
    T_Character  shift, and go to state 50
    T_Real       shift, and go to state 51
    T_Boolean    shift, and go to state 52
    T_Epoch      shift, and go to state 53
    T_Range      shift, and go to state 54
    Type_Name    shift, and go to state 56

    scalar_type  go to state 211


state 155

   25 static_dims: static_dims '[' . Integer ']'

    Integer  shift, and go to state 212


state 156

   32 type: static_type .

    $default  reduce using rule 32 (type)


state 157

   31 definition: names ':' type .

    $default  reduce using rule 31 (definition)


state 158

   33 type: dynamic_type .

    $default  reduce using rule 33 (type)


state 159

   43 linkage: names ':' . mode

    Link            shift, and go to state 213
    Create          shift, and go to state 214
    Link_or_Create  shift, and go to state 215

    mode  go to state 216


state 160

   42 linkages: linkages linkage .

    $default  reduce using rule 42 (linkages)


state 161

   13 names: names . ',' Variable_Name
   50 arguments: '(' names . ')'

    ','  shift, and go to state 36
    ')'  shift, and go to state 217


state 162

   48 initialize: S_Initialize arguments ':' . code

    $default  reduce using rule 111 ($@1)

    code  go to state 218
    $@1   go to state 110


state 163

   51 compute: S_Compute ':' . meta_stages

    String  shift, and go to state 219

    meta_stages     go to state 220
    meta_stage      go to state 221
    stage_sequence  go to state 222
    compute_stage   go to state 223
    stage_header    go to state 224


state 164

   67 partition: S_Partition . arguments ':' partition_specs

    '('  shift, and go to state 105

    $default  reduce using rule 49 (arguments)

    arguments  go to state 225


state 165

   27 task: Task String ':' define environment initialize compute partition .

    $default  reduce using rule 27 (task)


state 166

  112 code: $@1 stmt_block .

    $default  reduce using rule 112 (code)


state 167

   36 list: T_List Of . static_type

    T_Integer    shift, and go to state 49
    T_Character  shift, and go to state 50
    T_Real       shift, and go to state 51
    T_Boolean    shift, and go to state 52
    T_Epoch      shift, and go to state 53
    T_Range      shift, and go to state 54
    T_Array      shift, and go to state 55
    Type_Name    shift, and go to state 56

    static_type   go to state 226
    scalar_type   go to state 58
    static_array  go to state 59


state 168

   37 dynamic_array: Dimensionality T_Array . Of scalar_type format

    Of  shift, and go to state 227


state 169

  196 create_obj: New static_type '(' . args ')'

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    String         shift, and go to state 174
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    $default  reduce using rule 181 (args)

    expr             go to state 175
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    args             go to state 228
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 170

  197 task_invocation: Execute '(' String . ';' id optional_secs ')'

    ';'  shift, and go to state 229


state 171

  130 if_else_block: If '(' expr . ')' '{' stmt_block '}' else_block
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150
    ')'          shift, and go to state 230


state 172

  122 sequencial_loop: Do In Sequence . '{' stmt_block '}' For id In expr step_expr

    '{'  shift, and go to state 231


state 173

  123 parallel_loop: Do '{' stmt_block . '}' For index_ranges
  124              | Do '{' stmt_block . '}' While expr

    '}'  shift, and go to state 232


state 174

  182 args: String .

    $default  reduce using rule 182 (args)


state 175

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'
  183 args: expr .

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 183 (args)


state 176

  180 function_call: Variable_Name '(' args . ')'
  184 args: args . ',' expr

    ','  shift, and go to state 233
    ')'  shift, and go to state 234


state 177

  169 expr: '(' expr ')' .

    $default  reduce using rule 169 (expr)


state 178

  117 new_lines: New_Line new_lines .

    $default  reduce using rule 117 (new_lines)


state 179

  115 stmt_block: stmt new_lines stmt_block .

    $default  reduce using rule 115 (stmt_block)


state 180

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  155     | expr '=' expr .
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 155 (expr)


state 181

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  160     | expr R_AVG expr .
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 160 (expr)


state 182

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  162     | expr R_MIN_ENTRY expr .
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 162 (expr)


state 183

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  161     | expr R_MAX_ENTRY expr .
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 161 (expr)


state 184

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  159     | expr R_MIN expr .
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 159 (expr)


state 185

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  158     | expr R_MAX expr .
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 158 (expr)


state 186

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  157     | expr R_MULT expr .
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 157 (expr)


state 187

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  156     | expr R_ADD expr .
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 156 (expr)


state 188

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  148     | expr O_OR expr .
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    O_AND    shift, and go to state 135
    O_NE     shift, and go to state 136
    O_EQ     shift, and go to state 137
    '<'      shift, and go to state 138
    '>'      shift, and go to state 139
    O_GTE    shift, and go to state 140
    O_LTE    shift, and go to state 141
    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 148 (expr)


state 189

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  149     | expr O_AND expr .
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    O_NE     shift, and go to state 136
    O_EQ     shift, and go to state 137
    '<'      shift, and go to state 138
    '>'      shift, and go to state 139
    O_GTE    shift, and go to state 140
    O_LTE    shift, and go to state 141
    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 149 (expr)


state 190

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  151     | expr O_NE expr .
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '<'      shift, and go to state 138
    '>'      shift, and go to state 139
    O_GTE    shift, and go to state 140
    O_LTE    shift, and go to state 141
    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 151 (expr)


state 191

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  150     | expr O_EQ expr .
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '<'      shift, and go to state 138
    '>'      shift, and go to state 139
    O_GTE    shift, and go to state 140
    O_LTE    shift, and go to state 141
    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 150 (expr)


state 192

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  146     | expr '<' expr .
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 146 (expr)


state 193

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  147     | expr '>' expr .
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 147 (expr)


state 194

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  153     | expr O_GTE expr .
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 153 (expr)


state 195

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  154     | expr O_LTE expr .
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    O_RSH    shift, and go to state 142
    O_LSH    shift, and go to state 143
    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 154 (expr)


state 196

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  144     | expr O_RSH expr .
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 144 (expr)


state 197

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  143     | expr O_LSH expr .
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '+'      shift, and go to state 144
    '-'      shift, and go to state 145
    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 143 (expr)


state 198

  138 expr: expr . '+' expr
  138     | expr '+' expr .
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 138 (expr)


state 199

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  139     | expr '-' expr .
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '%'      shift, and go to state 146
    '*'      shift, and go to state 147
    '/'      shift, and go to state 148
    O_POWER  shift, and go to state 149
    At       shift, and go to state 150

    $default  reduce using rule 139 (expr)


state 200

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  142     | expr '%' expr .
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    At  shift, and go to state 150

    $default  reduce using rule 142 (expr)


state 201

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  140     | expr '*' expr .
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    At  shift, and go to state 150

    $default  reduce using rule 140 (expr)


state 202

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  141     | expr '/' expr .
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    At  shift, and go to state 150

    $default  reduce using rule 141 (expr)


state 203

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  145     | expr O_POWER expr .
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    At  shift, and go to state 150

    $default  reduce using rule 145 (expr)


state 204

  168 expr: expr At '(' . epoch ')'

    Variable_Name  shift, and go to state 235

    epoch  go to state 236


state 205

  187 id: Variable_Name .

    $default  reduce using rule 187 (id)


state 206

  175 field: field '.' id .

    $default  reduce using rule 175 (field)


state 207

  179 array_index: O_SB_RANGE .

    $default  reduce using rule 179 (array_index)


state 208

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'
  177 array_index: expr .
  178            | expr . O_SB_RANGE expr

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_SB_RANGE   shift, and go to state 237
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 177 (array_index)


state 209

  176 field: field '[' array_index . ']'

    ']'  shift, and go to state 238


state 210

   26 static_dims: '[' Integer ']' .

    $default  reduce using rule 26 (static_dims)


state 211

   24 static_array: T_Array static_dims Of scalar_type .

    $default  reduce using rule 24 (static_array)


state 212

   25 static_dims: static_dims '[' Integer . ']'

    ']'  shift, and go to state 239


state 213

   44 mode: Link .

    $default  reduce using rule 44 (mode)


state 214

   45 mode: Create .

    $default  reduce using rule 45 (mode)


state 215

   46 mode: Link_or_Create .

    $default  reduce using rule 46 (mode)


state 216

   43 linkage: names ':' mode .

    $default  reduce using rule 43 (linkage)


state 217

   50 arguments: '(' names ')' .

    $default  reduce using rule 50 (arguments)


state 218

   48 initialize: S_Initialize arguments ':' code .

    $default  reduce using rule 48 (initialize)


state 219

   60 stage_header: String . '(' Space Space_ID ')' activation_command

    '('  shift, and go to state 240


state 220

   51 compute: S_Compute ':' meta_stages .

    $default  reduce using rule 51 (compute)


state 221

   53 meta_stages: meta_stage .
   54            | meta_stage . meta_stages

    String  shift, and go to state 219

    $default  reduce using rule 53 (meta_stages)

    meta_stages     go to state 241
    meta_stage      go to state 221
    stage_sequence  go to state 222
    compute_stage   go to state 223
    stage_header    go to state 224


state 222

   52 meta_stages: stage_sequence .
   55 meta_stage: stage_sequence . repeat_control
   57 stage_sequence: stage_sequence . compute_stage

    Repeat  shift, and go to state 242
    String  shift, and go to state 219

    $default  reduce using rule 52 (meta_stages)

    compute_stage   go to state 243
    stage_header    go to state 224
    repeat_control  go to state 244


state 223

   56 stage_sequence: compute_stage .

    $default  reduce using rule 56 (stage_sequence)


state 224

   58 compute_stage: stage_header . '{' meta_stages '}'
   59              | stage_header . '{' code '}'

    '{'  shift, and go to state 245


state 225

   67 partition: S_Partition arguments . ':' partition_specs

    ':'  shift, and go to state 246


state 226

   36 list: T_List Of static_type .

    $default  reduce using rule 36 (list)


state 227

   37 dynamic_array: Dimensionality T_Array Of . scalar_type format

    T_Integer    shift, and go to state 49
    T_Character  shift, and go to state 50
    T_Real       shift, and go to state 51
    T_Boolean    shift, and go to state 52
    T_Epoch      shift, and go to state 53
    T_Range      shift, and go to state 54
    Type_Name    shift, and go to state 56

    scalar_type  go to state 247


state 228

  184 args: args . ',' expr
  196 create_obj: New static_type '(' args . ')'

    ','  shift, and go to state 233
    ')'  shift, and go to state 248


state 229

  197 task_invocation: Execute '(' String ';' . id optional_secs ')'

    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Dimension_No   shift, and go to state 77
    Variable_Name  shift, and go to state 205

    id  go to state 249


state 230

  130 if_else_block: If '(' expr ')' . '{' stmt_block '}' else_block

    '{'  shift, and go to state 250


state 231

  122 sequencial_loop: Do In Sequence '{' . stmt_block '}' For id In expr step_expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    stmt_block       go to state 251
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 232

  123 parallel_loop: Do '{' stmt_block '}' . For index_ranges
  124              | Do '{' stmt_block '}' . While expr

    For    shift, and go to state 252
    While  shift, and go to state 253


state 233

  184 args: args ',' . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 254
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 234

  180 function_call: Variable_Name '(' args ')' .

    $default  reduce using rule 180 (function_call)


state 235

  185 epoch: Variable_Name .
  186      | Variable_Name . '-' Integer

    '-'  shift, and go to state 255

    $default  reduce using rule 185 (epoch)


state 236

  168 expr: expr At '(' epoch . ')'

    ')'  shift, and go to state 256


state 237

  178 array_index: expr O_SB_RANGE . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 257
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 238

  176 field: field '[' array_index ']' .

    $default  reduce using rule 176 (field)


state 239

   25 static_dims: static_dims '[' Integer ']' .

    $default  reduce using rule 25 (static_dims)


state 240

   60 stage_header: String '(' . Space Space_ID ')' activation_command

    Space  shift, and go to state 258


state 241

   54 meta_stages: meta_stage meta_stages .

    $default  reduce using rule 54 (meta_stages)


state 242

   63 repeat_control: Repeat . ':' From String repeat_loop

    ':'  shift, and go to state 259


state 243

   57 stage_sequence: stage_sequence compute_stage .

    $default  reduce using rule 57 (stage_sequence)


state 244

   55 meta_stage: stage_sequence repeat_control .

    $default  reduce using rule 55 (meta_stage)


state 245

   58 compute_stage: stage_header '{' . meta_stages '}'
   59              | stage_header '{' . code '}'

    String  shift, and go to state 219

    $default  reduce using rule 111 ($@1)

    meta_stages     go to state 260
    meta_stage      go to state 221
    stage_sequence  go to state 222
    compute_stage   go to state 223
    stage_header    go to state 224
    code            go to state 261
    $@1             go to state 110


state 246

   67 partition: S_Partition arguments ':' . partition_specs

    Space  shift, and go to state 262

    partition_specs  go to state 263
    partition_spec   go to state 264


state 247

   37 dynamic_array: Dimensionality T_Array Of scalar_type . format

    Format  shift, and go to state 265

    $default  reduce using rule 38 (format)

    format  go to state 266


state 248

  196 create_obj: New static_type '(' args ')' .

    $default  reduce using rule 196 (create_obj)


state 249

  197 task_invocation: Execute '(' String ';' id . optional_secs ')'

    ';'  shift, and go to state 267

    $default  reduce using rule 198 (optional_secs)

    optional_secs  go to state 268


state 250

  130 if_else_block: If '(' expr ')' '{' . stmt_block '}' else_block

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    stmt_block       go to state 269
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 251

  122 sequencial_loop: Do In Sequence '{' stmt_block . '}' For id In expr step_expr

    '}'  shift, and go to state 270


state 252

  123 parallel_loop: Do '{' stmt_block '}' For . index_ranges

    Variable_Name  shift, and go to state 23

    names         go to state 271
    index_ranges  go to state 272
    index_range   go to state 273


state 253

  124 parallel_loop: Do '{' stmt_block '}' While . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 274
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 254

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'
  184 args: args ',' expr .

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 184 (args)


state 255

  186 epoch: Variable_Name '-' . Integer

    Integer  shift, and go to state 275


state 256

  168 expr: expr At '(' epoch ')' .

    $default  reduce using rule 168 (expr)


state 257

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'
  178 array_index: expr O_SB_RANGE expr .

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 178 (array_index)


state 258

   60 stage_header: String '(' Space . Space_ID ')' activation_command

    Space_ID  shift, and go to state 276


state 259

   63 repeat_control: Repeat ':' . From String repeat_loop

    From  shift, and go to state 277


state 260

   58 compute_stage: stage_header '{' meta_stages . '}'

    '}'  shift, and go to state 278


state 261

   59 compute_stage: stage_header '{' code . '}'

    '}'  shift, and go to state 279


state 262

   70 partition_spec: Space . Space_ID '<' Dimensionality '>' dynamic divides '{' main_dist sub_dist '}'
   71               | Space . Space_ID '<' Unpartitioned '>' '{' names '}'

    Space_ID  shift, and go to state 280


state 263

   67 partition: S_Partition arguments ':' partition_specs .
   69 partition_specs: partition_specs . partition_spec

    Space  shift, and go to state 262

    $default  reduce using rule 67 (partition)

    partition_spec  go to state 281


state 264

   68 partition_specs: partition_spec .

    $default  reduce using rule 68 (partition_specs)


state 265

   39 format: Format . Type_Name

    Type_Name  shift, and go to state 282


state 266

   37 dynamic_array: Dimensionality T_Array Of scalar_type format .

    $default  reduce using rule 37 (dynamic_array)


state 267

  199 optional_secs: ';' . optional_sec
  200              | ';' . optional_sec ';' optional_sec

    S_Initialize  shift, and go to state 283
    S_Partition   shift, and go to state 284

    optional_sec  go to state 285
    section       go to state 286


state 268

  197 task_invocation: Execute '(' String ';' id optional_secs . ')'

    ')'  shift, and go to state 287


state 269

  130 if_else_block: If '(' expr ')' '{' stmt_block . '}' else_block

    '}'  shift, and go to state 288


state 270

  122 sequencial_loop: Do In Sequence '{' stmt_block '}' . For id In expr step_expr

    For  shift, and go to state 289


state 271

   13 names: names . ',' Variable_Name
  127 index_range: names . In Variable_Name restrictions

    In   shift, and go to state 290
    ','  shift, and go to state 36


state 272

  123 parallel_loop: Do '{' stmt_block '}' For index_ranges .
  126 index_ranges: index_ranges . ';' index_range

    ';'  shift, and go to state 291

    $default  reduce using rule 123 (parallel_loop)


state 273

  125 index_ranges: index_range .

    $default  reduce using rule 125 (index_ranges)


state 274

  124 parallel_loop: Do '{' stmt_block '}' While expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 124 (parallel_loop)


state 275

  186 epoch: Variable_Name '-' Integer .

    $default  reduce using rule 186 (epoch)


state 276

   60 stage_header: String '(' Space Space_ID . ')' activation_command

    ')'  shift, and go to state 292


state 277

   63 repeat_control: Repeat ':' From . String repeat_loop

    String  shift, and go to state 293


state 278

   58 compute_stage: stage_header '{' meta_stages '}' .

    $default  reduce using rule 58 (compute_stage)


state 279

   59 compute_stage: stage_header '{' code '}' .

    $default  reduce using rule 59 (compute_stage)


state 280

   70 partition_spec: Space Space_ID . '<' Dimensionality '>' dynamic divides '{' main_dist sub_dist '}'
   71               | Space Space_ID . '<' Unpartitioned '>' '{' names '}'

    '<'  shift, and go to state 294


state 281

   69 partition_specs: partition_specs partition_spec .

    $default  reduce using rule 69 (partition_specs)


state 282

   39 format: Format Type_Name .

    $default  reduce using rule 39 (format)


state 283

  202 section: S_Initialize .

    $default  reduce using rule 202 (section)


state 284

  203 section: S_Partition .

    $default  reduce using rule 203 (section)


state 285

  199 optional_secs: ';' optional_sec .
  200              | ';' optional_sec . ';' optional_sec

    ';'  shift, and go to state 295

    $default  reduce using rule 199 (optional_secs)


state 286

  201 optional_sec: section . ':' args

    ':'  shift, and go to state 296


state 287

  197 task_invocation: Execute '(' String ';' id optional_secs ')' .

    $default  reduce using rule 197 (task_invocation)


state 288

  130 if_else_block: If '(' expr ')' '{' stmt_block '}' . else_block

    Else  shift, and go to state 297

    $default  reduce using rule 131 (else_block)

    else_block  go to state 298
    else        go to state 299
    else_if     go to state 300


state 289

  122 sequencial_loop: Do In Sequence '{' stmt_block '}' For . id In expr step_expr

    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Dimension_No   shift, and go to state 77
    Variable_Name  shift, and go to state 205

    id  go to state 301


state 290

  127 index_range: names In . Variable_Name restrictions

    Variable_Name  shift, and go to state 302


state 291

  126 index_ranges: index_ranges ';' . index_range

    Variable_Name  shift, and go to state 23

    names        go to state 271
    index_range  go to state 303


state 292

   60 stage_header: String '(' Space Space_ID ')' . activation_command

    Activate  shift, and go to state 304

    $default  reduce using rule 61 (activation_command)

    activation_command  go to state 305


state 293

   63 repeat_control: Repeat ':' From String . repeat_loop

    For      shift, and go to state 306
    Foreach  shift, and go to state 307
    While    shift, and go to state 308

    repeat_loop  go to state 309


state 294

   70 partition_spec: Space Space_ID '<' . Dimensionality '>' dynamic divides '{' main_dist sub_dist '}'
   71               | Space Space_ID '<' . Unpartitioned '>' '{' names '}'

    Unpartitioned   shift, and go to state 310
    Dimensionality  shift, and go to state 311


state 295

  200 optional_secs: ';' optional_sec ';' . optional_sec

    S_Initialize  shift, and go to state 283
    S_Partition   shift, and go to state 284

    optional_sec  go to state 312
    section       go to state 286


state 296

  201 optional_sec: section ':' . args

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    String         shift, and go to state 174
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    $default  reduce using rule 181 (args)

    expr             go to state 175
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    args             go to state 313
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 297

  134 else: Else . '{' stmt_block '}'
  135 else_if: Else . If '(' expr ')' '{' stmt_block '}'

    If   shift, and go to state 314
    '{'  shift, and go to state 315


state 298

  130 if_else_block: If '(' expr ')' '{' stmt_block '}' else_block .

    $default  reduce using rule 130 (if_else_block)


state 299

  132 else_block: else .

    $default  reduce using rule 132 (else_block)


state 300

  133 else_block: else_if . else_block

    Else  shift, and go to state 297

    $default  reduce using rule 131 (else_block)

    else_block  go to state 316
    else        go to state 299
    else_if     go to state 300


state 301

  122 sequencial_loop: Do In Sequence '{' stmt_block '}' For id . In expr step_expr

    In  shift, and go to state 317


state 302

  127 index_range: names In Variable_Name . restrictions

    O_AND  shift, and go to state 318

    $default  reduce using rule 128 (restrictions)

    restrictions  go to state 319


state 303

  126 index_ranges: index_ranges ';' index_range .

    $default  reduce using rule 126 (index_ranges)


state 304

   62 activation_command: Activate . If Variable_Name In expr

    If  shift, and go to state 320


state 305

   60 stage_header: String '(' Space Space_ID ')' activation_command .

    $default  reduce using rule 60 (stage_header)


state 306

   64 repeat_loop: For . Variable_Name In expr step_expr

    Variable_Name  shift, and go to state 321


state 307

   66 repeat_loop: Foreach . Space Space_ID C_Sub_Partition

    Space  shift, and go to state 322


state 308

   65 repeat_loop: While . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 323
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 309

   63 repeat_control: Repeat ':' From String repeat_loop .

    $default  reduce using rule 63 (repeat_control)


state 310

   71 partition_spec: Space Space_ID '<' Unpartitioned . '>' '{' names '}'

    '>'  shift, and go to state 324


state 311

   70 partition_spec: Space Space_ID '<' Dimensionality . '>' dynamic divides '{' main_dist sub_dist '}'

    '>'  shift, and go to state 325


state 312

  200 optional_secs: ';' optional_sec ';' optional_sec .

    $default  reduce using rule 200 (optional_secs)


state 313

  184 args: args . ',' expr
  201 optional_sec: section ':' args .

    ','  shift, and go to state 233

    $default  reduce using rule 201 (optional_sec)


state 314

  135 else_if: Else If . '(' expr ')' '{' stmt_block '}'

    '('  shift, and go to state 326


state 315

  134 else: Else '{' . stmt_block '}'

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    stmt_block       go to state 327
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 316

  133 else_block: else_if else_block .

    $default  reduce using rule 133 (else_block)


state 317

  122 sequencial_loop: Do In Sequence '{' stmt_block '}' For id In . expr step_expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 328
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 318

  129 restrictions: O_AND . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 329
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 319

  127 index_range: names In Variable_Name restrictions .

    $default  reduce using rule 127 (index_range)


state 320

   62 activation_command: Activate If . Variable_Name In expr

    Variable_Name  shift, and go to state 330


state 321

   64 repeat_loop: For Variable_Name . In expr step_expr

    In  shift, and go to state 331


state 322

   66 repeat_loop: Foreach Space . Space_ID C_Sub_Partition

    Space_ID  shift, and go to state 332


state 323

   65 repeat_loop: While expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 65 (repeat_loop)


state 324

   71 partition_spec: Space Space_ID '<' Unpartitioned '>' . '{' names '}'

    '{'  shift, and go to state 333


state 325

   70 partition_spec: Space Space_ID '<' Dimensionality '>' . dynamic divides '{' main_dist sub_dist '}'

    '<'  shift, and go to state 334

    $default  reduce using rule 72 (dynamic)

    dynamic  go to state 335


state 326

  135 else_if: Else If '(' . expr ')' '{' stmt_block '}'

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 336
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 327

  134 else: Else '{' stmt_block . '}'

    '}'  shift, and go to state 337


state 328

  122 sequencial_loop: Do In Sequence '{' stmt_block '}' For id In expr . step_expr
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    Step         shift, and go to state 338
    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 136 (step_expr)

    step_expr  go to state 339


state 329

  129 restrictions: O_AND expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 129 (restrictions)


state 330

   62 activation_command: Activate If Variable_Name . In expr

    In  shift, and go to state 340


state 331

   64 repeat_loop: For Variable_Name In . expr step_expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 341
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 332

   66 repeat_loop: Foreach Space Space_ID . C_Sub_Partition

    C_Sub_Partition  shift, and go to state 342


state 333

   71 partition_spec: Space Space_ID '<' Unpartitioned '>' '{' . names '}'

    Variable_Name  shift, and go to state 23

    names  go to state 343


state 334

   73 dynamic: '<' . Dynamic '>'

    Dynamic  shift, and go to state 344


state 335

   70 partition_spec: Space Space_ID '<' Dimensionality '>' dynamic . divides '{' main_dist sub_dist '}'

    Divides  shift, and go to state 345

    $default  reduce using rule 74 (divides)

    divides  go to state 346


state 336

  135 else_if: Else If '(' expr . ')' '{' stmt_block '}'
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150
    ')'          shift, and go to state 347


state 337

  134 else: Else '{' stmt_block '}' .

    $default  reduce using rule 134 (else)


state 338

  137 step_expr: Step . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 348
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 339

  122 sequencial_loop: Do In Sequence '{' stmt_block '}' For id In expr step_expr .

    $default  reduce using rule 122 (sequencial_loop)


state 340

   62 activation_command: Activate If Variable_Name In . expr

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    expr             go to state 349
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 341

   64 repeat_loop: For Variable_Name In expr . step_expr
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    Step         shift, and go to state 338
    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 136 (step_expr)

    step_expr  go to state 350


state 342

   66 repeat_loop: Foreach Space Space_ID C_Sub_Partition .

    $default  reduce using rule 66 (repeat_loop)


state 343

   13 names: names . ',' Variable_Name
   71 partition_spec: Space Space_ID '<' Unpartitioned '>' '{' names . '}'

    ','  shift, and go to state 36
    '}'  shift, and go to state 351


state 344

   73 dynamic: '<' Dynamic . '>'

    '>'  shift, and go to state 352


state 345

   75 divides: Divides . Space Space_ID Partitions
   76        | Divides . Space Space_ID Sub_Partitions

    Space  shift, and go to state 353


state 346

   70 partition_spec: Space Space_ID '<' Dimensionality '>' dynamic divides . '{' main_dist sub_dist '}'

    '{'  shift, and go to state 354


state 347

  135 else_if: Else If '(' expr ')' . '{' stmt_block '}'

    '{'  shift, and go to state 355


state 348

  137 step_expr: Step expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 137 (step_expr)


state 349

   62 activation_command: Activate If Variable_Name In expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . O_LSH expr
  144     | expr . O_RSH expr
  145     | expr . O_POWER expr
  146     | expr . '<' expr
  147     | expr . '>' expr
  148     | expr . O_OR expr
  149     | expr . O_AND expr
  150     | expr . O_EQ expr
  151     | expr . O_NE expr
  153     | expr . O_GTE expr
  154     | expr . O_LTE expr
  155     | expr . '=' expr
  156     | expr . R_ADD expr
  157     | expr . R_MULT expr
  158     | expr . R_MAX expr
  159     | expr . R_MIN expr
  160     | expr . R_AVG expr
  161     | expr . R_MAX_ENTRY expr
  162     | expr . R_MIN_ENTRY expr
  168     | expr . At '(' epoch ')'

    '='          shift, and go to state 126
    R_AVG        shift, and go to state 127
    R_MIN_ENTRY  shift, and go to state 128
    R_MAX_ENTRY  shift, and go to state 129
    R_MIN        shift, and go to state 130
    R_MAX        shift, and go to state 131
    R_MULT       shift, and go to state 132
    R_ADD        shift, and go to state 133
    O_OR         shift, and go to state 134
    O_AND        shift, and go to state 135
    O_NE         shift, and go to state 136
    O_EQ         shift, and go to state 137
    '<'          shift, and go to state 138
    '>'          shift, and go to state 139
    O_GTE        shift, and go to state 140
    O_LTE        shift, and go to state 141
    O_RSH        shift, and go to state 142
    O_LSH        shift, and go to state 143
    '+'          shift, and go to state 144
    '-'          shift, and go to state 145
    '%'          shift, and go to state 146
    '*'          shift, and go to state 147
    '/'          shift, and go to state 148
    O_POWER      shift, and go to state 149
    At           shift, and go to state 150

    $default  reduce using rule 62 (activation_command)


state 350

   64 repeat_loop: For Variable_Name In expr step_expr .

    $default  reduce using rule 64 (repeat_loop)


state 351

   71 partition_spec: Space Space_ID '<' Unpartitioned '>' '{' names '}' .

    $default  reduce using rule 71 (partition_spec)


state 352

   73 dynamic: '<' Dynamic '>' .

    $default  reduce using rule 73 (dynamic)


state 353

   75 divides: Divides Space . Space_ID Partitions
   76        | Divides Space . Space_ID Sub_Partitions

    Space_ID  shift, and go to state 356


state 354

   70 partition_spec: Space Space_ID '<' Dimensionality '>' dynamic divides '{' . main_dist sub_dist '}'

    Variable_Name  shift, and go to state 357

    main_dist  go to state 358
    data_spec  go to state 359
    var_list   go to state 360
    var        go to state 361


state 355

  135 else_if: Else If '(' expr ')' '{' . stmt_block '}'

    New            shift, and go to state 69
    Execute        shift, and go to state 70
    If             shift, and go to state 71
    Range          shift, and go to state 72
    Local          shift, and go to state 73
    Index          shift, and go to state 74
    Do             shift, and go to state 75
    Integer        shift, and go to state 76
    Dimension_No   shift, and go to state 77
    Character      shift, and go to state 78
    Real           shift, and go to state 79
    Boolean        shift, and go to state 80
    Variable_Name  shift, and go to state 81
    '!'            shift, and go to state 82
    '('            shift, and go to state 83

    stmt_block       go to state 362
    stmt             go to state 85
    sequencial_loop  go to state 86
    parallel_loop    go to state 87
    if_else_block    go to state 88
    expr             go to state 89
    constant         go to state 90
    field            go to state 91
    function_call    go to state 92
    id               go to state 93
    create_obj       go to state 94
    task_invocation  go to state 95


state 356

   75 divides: Divides Space Space_ID . Partitions
   76        | Divides Space Space_ID . Sub_Partitions

    Sub_Partitions  shift, and go to state 363
    Partitions      shift, and go to state 364


state 357

   82 var: Variable_Name .
   83    | Variable_Name . '<' dimensions '>'

    '<'  shift, and go to state 365

    $default  reduce using rule 82 (var)


state 358

   70 partition_spec: Space Space_ID '<' Dimensionality '>' dynamic divides '{' main_dist . sub_dist '}'
   78 main_dist: main_dist . data_spec

    P_Sub_Partition  shift, and go to state 366
    Variable_Name    shift, and go to state 357

    $default  reduce using rule 98 (sub_dist)

    data_spec  go to state 367
    var_list   go to state 360
    var        go to state 361
    sub_dist   go to state 368


state 359

   77 main_dist: data_spec .

    $default  reduce using rule 77 (main_dist)


state 360

   79 data_spec: var_list . ':' instr_list relativity
   81 var_list: var_list . ',' var

    ','  shift, and go to state 369
    ':'  shift, and go to state 370


state 361

   80 var_list: var .

    $default  reduce using rule 80 (var_list)


state 362

  135 else_if: Else If '(' expr ')' '{' stmt_block . '}'

    '}'  shift, and go to state 371


state 363

   76 divides: Divides Space Space_ID Sub_Partitions .

    $default  reduce using rule 76 (divides)


state 364

   75 divides: Divides Space Space_ID Partitions .

    $default  reduce using rule 75 (divides)


state 365

   83 var: Variable_Name '<' . dimensions '>'

    V_Dimension  shift, and go to state 372

    dimensions  go to state 373


state 366

   99 sub_dist: P_Sub_Partition . '<' Dimensionality '>' '<' nature '>' '{' data_sub_dist '}'

    '<'  shift, and go to state 374


state 367

   78 main_dist: main_dist data_spec .

    $default  reduce using rule 78 (main_dist)


state 368

   70 partition_spec: Space Space_ID '<' Dimensionality '>' dynamic divides '{' main_dist sub_dist . '}'

    '}'  shift, and go to state 375


state 369

   81 var_list: var_list ',' . var

    Variable_Name  shift, and go to state 357

    var  go to state 376


state 370

   79 data_spec: var_list ':' . instr_list relativity

    Replicated     shift, and go to state 377
    Variable_Name  shift, and go to state 378

    instr_list  go to state 379
    instr       go to state 380


state 371

  135 else_if: Else If '(' expr ')' '{' stmt_block '}' .

    $default  reduce using rule 135 (else_if)


state 372

   84 dimensions: V_Dimension .

    $default  reduce using rule 84 (dimensions)


state 373

   83 var: Variable_Name '<' dimensions . '>'
   85 dimensions: dimensions . ',' V_Dimension

    ','  shift, and go to state 381
    '>'  shift, and go to state 382


state 374

   99 sub_dist: P_Sub_Partition '<' . Dimensionality '>' '<' nature '>' '{' data_sub_dist '}'

    Dimensionality  shift, and go to state 383


state 375

   70 partition_spec: Space Space_ID '<' Dimensionality '>' dynamic divides '{' main_dist sub_dist '}' .

    $default  reduce using rule 70 (partition_spec)


state 376

   81 var_list: var_list ',' var .

    $default  reduce using rule 81 (var_list)


state 377

   88 instr: Replicated .

    $default  reduce using rule 88 (instr)


state 378

   89 instr: Variable_Name . '(' partition_args ')'
   90      | Variable_Name . '(' partition_args ')' Padding '(' partition_args ')'

    '('  shift, and go to state 384


state 379

   79 data_spec: var_list ':' instr_list . relativity
   87 instr_list: instr_list . ',' instr

    ','  shift, and go to state 385
    ';'  shift, and go to state 386

    $default  reduce using rule 96 (relativity)

    relativity  go to state 387


state 380

   86 instr_list: instr .

    $default  reduce using rule 86 (instr_list)


state 381

   85 dimensions: dimensions ',' . V_Dimension

    V_Dimension  shift, and go to state 388


state 382

   83 var: Variable_Name '<' dimensions '>' .

    $default  reduce using rule 83 (var)


state 383

   99 sub_dist: P_Sub_Partition '<' Dimensionality . '>' '<' nature '>' '{' data_sub_dist '}'

    '>'  shift, and go to state 389


state 384

   89 instr: Variable_Name '(' . partition_args ')'
   90      | Variable_Name '(' . partition_args ')' Padding '(' partition_args ')'

    Integer        shift, and go to state 390
    Variable_Name  shift, and go to state 391

    $default  reduce using rule 91 (partition_args)

    partition_args  go to state 392
    partition_arg   go to state 393


state 385

   87 instr_list: instr_list ',' . instr

    Replicated     shift, and go to state 377
    Variable_Name  shift, and go to state 378

    instr  go to state 394


state 386

   97 relativity: ';' . Relative_To Space Space_ID

    Relative_To  shift, and go to state 395


state 387

   79 data_spec: var_list ':' instr_list relativity .

    $default  reduce using rule 79 (data_spec)


state 388

   85 dimensions: dimensions ',' V_Dimension .

    $default  reduce using rule 85 (dimensions)


state 389

   99 sub_dist: P_Sub_Partition '<' Dimensionality '>' . '<' nature '>' '{' data_sub_dist '}'

    '<'  shift, and go to state 396


state 390

   95 partition_arg: Integer .

    $default  reduce using rule 95 (partition_arg)


state 391

   94 partition_arg: Variable_Name .

    $default  reduce using rule 94 (partition_arg)


state 392

   89 instr: Variable_Name '(' partition_args . ')'
   90      | Variable_Name '(' partition_args . ')' Padding '(' partition_args ')'
   93 partition_args: partition_args . ',' partition_arg

    ','  shift, and go to state 397
    ')'  shift, and go to state 398


state 393

   92 partition_args: partition_arg .

    $default  reduce using rule 92 (partition_args)


state 394

   87 instr_list: instr_list ',' instr .

    $default  reduce using rule 87 (instr_list)


state 395

   97 relativity: ';' Relative_To . Space Space_ID

    Space  shift, and go to state 399


state 396

   99 sub_dist: P_Sub_Partition '<' Dimensionality '>' '<' . nature '>' '{' data_sub_dist '}'

    Ordered    shift, and go to state 400
    Unordered  shift, and go to state 401

    nature  go to state 402


state 397

   93 partition_args: partition_args ',' . partition_arg

    Integer        shift, and go to state 390
    Variable_Name  shift, and go to state 391

    partition_arg  go to state 403


state 398

   89 instr: Variable_Name '(' partition_args ')' .
   90      | Variable_Name '(' partition_args ')' . Padding '(' partition_args ')'

    Padding  shift, and go to state 404

    $default  reduce using rule 89 (instr)


state 399

   97 relativity: ';' Relative_To Space . Space_ID

    Space_ID  shift, and go to state 405


state 400

  100 nature: Ordered .

    $default  reduce using rule 100 (nature)


state 401

  101 nature: Unordered .

    $default  reduce using rule 101 (nature)


state 402

   99 sub_dist: P_Sub_Partition '<' Dimensionality '>' '<' nature . '>' '{' data_sub_dist '}'

    '>'  shift, and go to state 406


state 403

   93 partition_args: partition_args ',' partition_arg .

    $default  reduce using rule 93 (partition_args)


state 404

   90 instr: Variable_Name '(' partition_args ')' Padding . '(' partition_args ')'

    '('  shift, and go to state 407


state 405

   97 relativity: ';' Relative_To Space Space_ID .

    $default  reduce using rule 97 (relativity)


state 406

   99 sub_dist: P_Sub_Partition '<' Dimensionality '>' '<' nature '>' . '{' data_sub_dist '}'

    '{'  shift, and go to state 408


state 407

   90 instr: Variable_Name '(' partition_args ')' Padding '(' . partition_args ')'

    Integer        shift, and go to state 390
    Variable_Name  shift, and go to state 391

    $default  reduce using rule 91 (partition_args)

    partition_args  go to state 409
    partition_arg   go to state 393


state 408

   99 sub_dist: P_Sub_Partition '<' Dimensionality '>' '<' nature '>' '{' . data_sub_dist '}'

    Variable_Name  shift, and go to state 357

    var_list       go to state 410
    var            go to state 361
    data_sub_dist  go to state 411
    data_sub_spec  go to state 412


state 409

   90 instr: Variable_Name '(' partition_args ')' Padding '(' partition_args . ')'
   93 partition_args: partition_args . ',' partition_arg

    ','  shift, and go to state 397
    ')'  shift, and go to state 413


state 410

   81 var_list: var_list . ',' var
  104 data_sub_spec: var_list . ':' ordered_instr_list

    ','  shift, and go to state 369
    ':'  shift, and go to state 414


state 411

   99 sub_dist: P_Sub_Partition '<' Dimensionality '>' '<' nature '>' '{' data_sub_dist . '}'
  103 data_sub_dist: data_sub_dist . data_sub_spec

    Variable_Name  shift, and go to state 357
    '}'            shift, and go to state 415

    var_list       go to state 410
    var            go to state 361
    data_sub_spec  go to state 416


state 412

  102 data_sub_dist: data_sub_spec .

    $default  reduce using rule 102 (data_sub_dist)


state 413

   90 instr: Variable_Name '(' partition_args ')' Padding '(' partition_args ')' .

    $default  reduce using rule 90 (instr)


state 414

  104 data_sub_spec: var_list ':' . ordered_instr_list

    Replicated     shift, and go to state 377
    Variable_Name  shift, and go to state 378

    instr               go to state 417
    ordered_instr_list  go to state 418
    ordered_instr       go to state 419


state 415

   99 sub_dist: P_Sub_Partition '<' Dimensionality '>' '<' nature '>' '{' data_sub_dist '}' .

    $default  reduce using rule 99 (sub_dist)


state 416

  103 data_sub_dist: data_sub_dist data_sub_spec .

    $default  reduce using rule 103 (data_sub_dist)


state 417

  107 ordered_instr: instr . order

    Ascends   shift, and go to state 420
    Descends  shift, and go to state 421

    $default  reduce using rule 108 (order)

    order  go to state 422


state 418

  104 data_sub_spec: var_list ':' ordered_instr_list .
  106 ordered_instr_list: ordered_instr_list . ',' ordered_instr

    ','  shift, and go to state 423

    $default  reduce using rule 104 (data_sub_spec)


state 419

  105 ordered_instr_list: ordered_instr .

    $default  reduce using rule 105 (ordered_instr_list)


state 420

  109 order: Ascends .

    $default  reduce using rule 109 (order)


state 421

  110 order: Descends .

    $default  reduce using rule 110 (order)


state 422

  107 ordered_instr: instr order .

    $default  reduce using rule 107 (ordered_instr)


state 423

  106 ordered_instr_list: ordered_instr_list ',' . ordered_instr

    Replicated     shift, and go to state 377
    Variable_Name  shift, and go to state 378

    instr          go to state 417
    ordered_instr  go to state 424


state 424

  106 ordered_instr_list: ordered_instr_list ',' ordered_instr .

    $default  reduce using rule 106 (ordered_instr_list)
