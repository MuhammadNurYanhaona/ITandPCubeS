Program (args) {
	length = args.length
	m = args.m
	p = args.p
	q = args.q
        firstEnv = new TaskEnvironment(name: "First Task")
        execute("First Task"; firstEnv; Initialize: length; Partition: m)
        secondEnv = new TaskEnvironment(name: "Second Task")
	threshold = (length + 1) / 2
        secondEnv.a = firstEnv.a[threshold...(length - 1)][threshold...(length - 1)]
        execute("Second Task"; secondEnv; Partition: p, q)
        execute("First Task"; firstEnv; Initialize: length; Partition: m)
        store_array(firstEnv.a, args.output_file)
}

Task "First Task":
	Define:
		a: 2D Array of Integer
	Environment:
		a: link-or-create
	Initialize(length):
		a.dimension1.range.min = 0
		a.dimension1.range.max = length - 1
		a.dimension2 = a.dimension1
	Compute:
		"Assign Index Values" (Space A) {
			do { a[i][j] = a[i][j] + j } for i,j in a
		}
	Partition(b):
		Space A <1D> { a<dim1>: block_stride(b) } 

Task "Second Task":
	Define:
		a: 2D Array of Integer
	Environment:
		a: link
	Compute:
		"Increase By Ten" (Space A) {
			do { a[i][j] = a[i][j] + 10 } for i, j in a
		}
	Partition(p,q):
		Space A <2D> { a: block_size(p,q) } 
