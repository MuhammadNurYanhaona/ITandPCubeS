Task "Reorder Inclusion Check":
	Define:
		matrix: 2D Array of Real single-precision
		valid_range: Range
		i: Integer
	Environment:
		matrix: create
	Initialize (length, min, max):
		matrix.dimension1.range.min = 0
		matrix.dimension1.range.max = length - 1
		matrix.dimension2 = matrix.dimension1
		valid_range.min = min
		valid_range.max = max
	Compute:
		"Update Entries" (Space C) 
		Activate if i in matrix.local.dimension2.range {		 
			do { matrix[j][k] = 1
			} for j, k in matrix
		}
		Repeat: from "Update Entries" for i in valid_range
	Partition (k, l):
		Space A <1D> {
			matrix<dim2>: block_size(k)
		}
		Space B <1D> divides Space A partitions {
			matrix<dim2>: block_stride(l)
		}
		Space C <1D> divides Space B partitions {
			matrix<dim2>: stride()
		}
