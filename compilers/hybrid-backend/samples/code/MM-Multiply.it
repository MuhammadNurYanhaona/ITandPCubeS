Program (args) { 
        mmEnv = new TaskEnvironment(name: "Matrix Multiply")
	bind_input(mmEnv, "a", args.input_file_1)
	bind_input(mmEnv, "b", args.input_file_2)
        execute("Matrix Multiply"; mmEnv; Partition: args.k, args.l, args.q)
        bind_output(mmEnv, "c", args.output_file)
}

Task "Matrix Multiply":
	Define:
		a, b, c: 2D Array of Real double-precision
	Environment:
		a, b: link
		c: create
	Initialize:
		c.dimension1 = a.dimension1
		c.dimension2 = b.dimension2
	Compute:
		// The underlying computation for block matrix multiplication is the same
		// of that of simple matrix multiplication algorithm	
		"Block multiply matrices" (Space A) { 
			do { c[i][j] = c[i][j] + a[i][k] * b[k][j]
			} for i, j in c; k in a
		}
		Repeat: from "Block multiply matrices" foreach Space A sub-partition
	Partition (k, l, q):
		Space A <2D> {
			c: block_size(k, l)
			a: block_size(k), replicated
			b: replicated, block_size(l)
			// block-by-block flow of data inside a PCU is governed by the sub-partition specification 
			Sub-partition <1D> <unordered> {
				a<dim2>, b<dim1>: block_size(q)
			}
		}
