Program(args) {
	lpsSyncTestEnv = new TaskEnvironment(name: "Test LPS Sync")
	a_range = new Range(min: args.min, max: args.max)
	s1 = args.s1
	s2 = args.s2
	execute("Test LPS Sync"; lpsSyncTestEnv; Initialize:a_range; Partition: s1, s2)
	bind_output(lpsSyncTestEnv, "a", args.output_a)
	bind_output(lpsSyncTestEnv, "b", args.output_b)
}

Task "Test LPS Sync":
	Define:
		a, b, c: 1D Array of Integer
		x, y, z: Integer
	Environment:
		a, b, x: create
	Initialize (a_range):
		a.dimension1.range = b.dimension1.range = a_range
		x = a_range.max
		y = x % 2
		z = a_range.min
		c.dimension1 = a.dimension1
	Compute:
		"Stage 1" (Space C) {
			do {
				c[i] = a[i] % z
			} for i in a
		}
		"Stage 2" (Space A) {
			do {
				a[i] = b[i] + c[i] + x + z
			} for i in a
		}
		"Stage 3" (Space B) 
		Activate if y in a.local.dimension1.range {
			x = x % a[y]
			z = x + 1
		}
		"Stage 4" (Space C) {
			do {
				b[i] = b[i] - z	
			} for i in b
		}
	Partition(s1, s2):
		Space A <1D> {
			a, b, c: block_size(s1)
		}
		Space B <1D> divides Space A partitions {
			a: block_size(s2)
		}
		Space C <1D> {
			a, b, c: stride()
		}	
