## 
## Simple makefile for decaf programming projects
##


.PHONY: clean strip

# Set the default target. When you make with no arguments, this will be the target built.
COMPILER = seq-ref 
PRODUCTS = $(COMPILER) 
default: $(PRODUCTS)

# Set up the list of source and object files
SRCS = $(shell find . ! -name "hashtable.cpp" -name "*.cpp" 	\
		-not -path "./build/*" 				\
		-not -path "./mpi/*"				\
		-not -path "./openmp/*" 			\
		-not -path "./pthread/*"			\
		-not -path "./validator/*")


# OBJS can deal with either .cpp or .c files listed in SRCS
OBJS = $(patsubst %.cpp, %.o, $(filter %.cpp,$(SRCS))) $(patsubst %.c, %.o, $(filter %.c, $(SRCS)))

JUNK =  *.o */*.o *.core core $(COMPILER).purify purify.log

# log files generated by running any compiled IT program
BUILD_LOGS = ./bin/*.log 

# Define the tools we are going to use
CC= g++
LD = g++

# Set up the necessary flags for the tools

# settings for development and debugging
#CFLAGS = -g -Wall -fno-inline -Wno-unused -Wno-sign-compare -O0
# settings for optimized code generation
CFLAGS = -O3
# settings for vectorization support
#CFLAGS = -O3 -mtune=native -march=native -mfpmath=sse

# We need flag to enable the POSIX thread library during compiling generated code
RFLAG = -pthread -fopenmp

# Link with standard c library, math library
LIBS = -lc -lm -pthread

# Link with POSIX thread library
BUILD_LIBS = -pthread

# Rules for various parts of the target
.cpp.o: $*.cpp
	$(CC) $(CFLAGS) $(RFLAG) -c -o $@ $*.cpp

# rules to build compiler (icc)
$(COMPILER) : $(OBJS)
	$(LD) $(RFLAG) -o $@ $(OBJS) $(LIBS)

# This target is to build small for testing (no debugging info), removes
# all intermediate products, too
strip : $(PRODUCTS)
	strip $(PRODUCTS)
	rm -rf $(JUNK)


# make depend will set up the header file dependencies. You should make 
# depend whenever you add a new header file to the project or move the 
# project between machines
#
depend:
	makedepend -- $(CFLAGS) -- $(SRCS)

clean:
	rm -f $(JUNK) $(PRODUCTS) $(BUILD_LOGS)
